# ===========================================
# Multi-Provider OAuth Configuration
# ===========================================
# Configure only the provider(s) you want to use.
# You don't need to configure all providers.

# GitHub OAuth (Optional)
# Get credentials from: https://github.com/settings/developers
GITHUB_CLIENT_ID=<your_github_client_id>
GITHUB_CLIENT_SECRET=<your_github_client_secret>

# Google OAuth (Optional)
# Get credentials from: https://console.cloud.google.com/
GOOGLE_CLIENT_ID=<your_google_client_id>.apps.googleusercontent.com
GOOGLE_CLIENT_SECRET=<your_google_client_secret>

# Auth0 OAuth (Optional)
# Get credentials from: https://manage.auth0.com/
AUTH0_DOMAIN=<your-tenant>.us.auth0.com
AUTH0_CLIENT_ID=<your_auth0_client_id>
AUTH0_CLIENT_SECRET=<your_auth0_client_secret>
AUTH0_AUDIENCE=<your_auth0_audience>  # Optional: Management API audience

# Keycloak OAuth (Optional)
# Configure in your Keycloak Admin Console
KEYCLOAK_DOMAIN=https://your.keycloak.server
KEYCLOAK_REALM=<your_realm_name>
KEYCLOAK_CLIENT_ID=<your_keycloak_client_id>
KEYCLOAK_CLIENT_SECRET=<your_keycloak_client_secret>  # Optional for public clients

# Custom OAuth Server (Optional)
# Use the included OAuth 2.1 server or your own
CUSTOM_OAUTH_URL=http://localhost:3000
CUSTOM_OAUTH_CLIENT_ID=demo-client

# ===========================================
# Required Configuration
# ===========================================

# Cookie encryption key (Required for all providers)
# Generate with: openssl rand -hex 32
COOKIE_ENCRYPTION_KEY=<your_random_encryption_key>

# Database Connection String
# This should be a PostgreSQL connection string with full read/write permissions
# Format: postgresql://username:password@hostname:port/database_name
# Example: postgresql://user:password@localhost:5432/mydb
# For production, use Hyperdrive: https://developers.cloudflare.com/hyperdrive/
DATABASE_URL=postgresql://username:password@localhost:5432/database_name

# ===========================================
# THIRD-PARTY API KEYS
# ===========================================

# Brave Search API Key (for web and news search tools)
# Sign up at: https://api.search.brave.com/
# Free tier: 2,000 queries/month, Pro: 20,000+ queries/month
BRAVE_SEARCH_API_KEY=<your_brave_search_api_key>

# ===========================================
# GMAIL CONFIGURATION
# ===========================================
# Gmail tools use Google OAuth credentials (GOOGLE_CLIENT_ID/SECRET above)
# Make sure to enable Gmail API and add these scopes in Google Cloud Console:
# - https://www.googleapis.com/auth/gmail.send
# - https://www.googleapis.com/auth/gmail.readonly  
# - https://www.googleapis.com/auth/userinfo.profile
# 
# No additional environment variables needed - Gmail uses Google OAuth

# ===========================================
# Optional Configuration
# ===========================================

# Sentry monitoring (Optional)
# Get your DSN from https://sentry.io/settings/projects/your-project/keys/
# Create a new project in Sentry, then for the platform pick Cloudflare Workers (search in the top right)
SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id
NODE_ENV=development

# ===========================================
# TOOL-SPECIFIC NOTES
# ===========================================

# DATABASE TOOLS:
# - listTables: Available to all authenticated users
# - queryDatabase: Read-only SQL queries for all users  
# - executeDatabase: Write operations (restricted to ALLOWED_USERNAMES)

# GITHUB TOOLS:
# - searchRepositories: Search GitHub repositories
# - getRepositoryInfo: Get detailed repository information
# Requires GitHub authentication and valid GitHub access token

# GMAIL TOOLS:
# - sendEmail: Send emails with security validation and anti-phishing checks
# - getEmailProfile: Get Gmail account information
# Requires Google OAuth with Gmail scopes

# BRAVE SEARCH TOOLS:
# - webSearch: Comprehensive web search with filtering
# - newsSearch: News-specific search with freshness controls
# Requires Brave Search API key

# ===========================================
# SECURITY CONFIGURATION
# ===========================================

# User Access Control:
# Edit ALLOWED_USERNAMES in tool files to control write access:
# - database-tools-sentry.ts: Controls database write operations
# - gmail-tools-sentry.ts: Controls email sending (currently all authenticated users)
# - github-tools-sentry.ts: Controls GitHub operations (currently all authenticated users)
# - brave-search-tools-sentry.ts: Controls search operations (currently all authenticated users)

# Rate Limiting (built into tools):
# - Database: Conservative limits for connection pooling
# - GitHub: Respects GitHub API rate limits
# - Gmail: 5 emails/minute, 50 read operations/minute  
# - Brave Search: 30 web searches/minute, 20 news searches/minute
